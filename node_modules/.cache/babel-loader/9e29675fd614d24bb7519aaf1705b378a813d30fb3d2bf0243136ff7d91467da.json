{"ast":null,"code":"import _toConsumableArray from\"/Users/jamesmacquillan/Documents/chatbot-im-1o/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/jamesmacquillan/Documents/chatbot-im-1o/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';/**\n * A custom hook for managing the conversation between the user and the AI.\n *\n * @returns {Object} An object containing the `messages` array and the `addMessage` function.\n */var useMessageCollection=function useMessageCollection(){var initialMsg={id:1,createdAt:Date.now(),text:'**Hello!** *How can I help you today?*',ai:true};var _useState=useState([initialMsg]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];/**\n  * A function for adding a new message to the collection.\n  *\n  * @param {Object} message - The message to add to the collection.\n  */var addMessage=function addMessage(message){setMessages(function(prev){return[].concat(_toConsumableArray(prev),[message]);});};var clearMessages=function clearMessages(){return setMessages([initialMsg]);};return[messages,addMessage,clearMessages];};export default useMessageCollection;","map":{"version":3,"names":["useState","useMessageCollection","initialMsg","id","createdAt","Date","now","text","ai","_useState","_useState2","_slicedToArray","messages","setMessages","addMessage","message","prev","concat","_toConsumableArray","clearMessages"],"sources":["/Users/jamesmacquillan/Documents/chatbot-im-1o/src/hooks/useMessageCollection.js"],"sourcesContent":["import { useState } from 'react'\n\n/**\n * A custom hook for managing the conversation between the user and the AI.\n *\n * @returns {Object} An object containing the `messages` array and the `addMessage` function.\n */\nconst useMessageCollection = () => {\n  const initialMsg = {\n    id: 1,\n    createdAt: Date.now(),\n    text: '**Hello!** *How can I help you today?*',\n    ai: true\n  }\n  const [messages, setMessages] = useState([initialMsg]);\n\n  /**\n  * A function for adding a new message to the collection.\n  *\n  * @param {Object} message - The message to add to the collection.\n  */\n  const addMessage = (message) => {\n    setMessages((prev) => [...prev, message]);\n  }\n\n  const clearMessages = () => setMessages([initialMsg])\n\n  return [messages, addMessage, clearMessages];\n}\n\nexport default useMessageCollection"],"mappings":"gRAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC;AACA;AACA;AACA;AACA,GACA,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CACjC,GAAM,CAAAC,UAAU,CAAG,CACjBC,EAAE,CAAE,CAAC,CACLC,SAAS,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBC,IAAI,CAAE,wCAAwC,CAC9CC,EAAE,CAAE,IACN,CAAC,CACD,IAAAC,SAAA,CAAgCT,QAAQ,CAAC,CAACE,UAAU,CAAC,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAE5B;AACF;AACA;AACA;AACA,IACE,GAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,OAAO,CAAK,CAC9BF,WAAW,CAAC,SAACG,IAAI,WAAAC,MAAA,CAAAC,kBAAA,CAASF,IAAI,GAAED,OAAO,IAAC,CAAC,CAC3C,CAAC,CAED,GAAM,CAAAI,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,QAAS,CAAAN,WAAW,CAAC,CAACX,UAAU,CAAC,CAAC,GAErD,MAAO,CAACU,QAAQ,CAAEE,UAAU,CAAEK,aAAa,CAAC,CAC9C,CAAC,CAED,cAAe,CAAAlB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}