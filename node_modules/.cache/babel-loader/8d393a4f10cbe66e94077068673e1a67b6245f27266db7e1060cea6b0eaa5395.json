{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport useLocalStorage from './useLocalStorage';\n\n/**\n * A custom hook for handling dark mode toggle in a React component.\n * It stores the dark mode toggle state in the local storage, so that the\n * toggle state persists across page reloads.\n *\n * @returns {Array} An array containing the current dark mode toggle state\n * and a function to update it.\n */\n\nconst useDarkMode = () => {\n  _s();\n  const [enabled, setEnabled] = useLocalStorage('dark-theme');\n  const isEnabled = typeof enabledState === 'undefined' && enabled;\n  useEffect(() => {\n    const className = 'dark';\n    const bodyClass = window.document.body.classList;\n    isEnabled ? bodyClass.add(className) : bodyClass.remove(className);\n  }, [enabled, isEnabled]);\n  return [enabled, setEnabled];\n};\n_s(useDarkMode, \"rQMjRILISN/A9ZDGyN+1Y3P/UxE=\", false, function () {\n  return [useLocalStorage];\n});\nexport default useDarkMode;","map":{"version":3,"names":["useEffect","useLocalStorage","useDarkMode","_s","enabled","setEnabled","isEnabled","enabledState","className","bodyClass","window","document","body","classList","add","remove"],"sources":["/Users/jamesmacquillan/Downloads/chatbot-im-1o copy/src/hooks/useDarkMode.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useLocalStorage from './useLocalStorage';\n\n/**\n * A custom hook for handling dark mode toggle in a React component.\n * It stores the dark mode toggle state in the local storage, so that the\n * toggle state persists across page reloads.\n *\n * @returns {Array} An array containing the current dark mode toggle state\n * and a function to update it.\n */\n\nconst useDarkMode = () => {\n  const [enabled, setEnabled] = useLocalStorage('dark-theme');\n  const isEnabled = typeof enabledState === 'undefined' && enabled;\n\n  useEffect(() => {\n    const className = 'dark';\n    const bodyClass = window.document.body.classList;\n\n    isEnabled ? bodyClass.add(className) : bodyClass.remove(className);\n  }, [enabled, isEnabled]);\n\n  return [enabled, setEnabled];\n}\n\nexport default useDarkMode"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,eAAe,CAAC,YAAY,CAAC;EAC3D,MAAMK,SAAS,GAAG,OAAOC,YAAY,KAAK,WAAW,IAAIH,OAAO;EAEhEJ,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAM;IACxB,MAAMC,SAAS,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS;IAEhDP,SAAS,GAAGG,SAAS,CAACK,GAAG,CAACN,SAAS,CAAC,GAAGC,SAAS,CAACM,MAAM,CAACP,SAAS,CAAC;EACpE,CAAC,EAAE,CAACJ,OAAO,EAAEE,SAAS,CAAC,CAAC;EAExB,OAAO,CAACF,OAAO,EAAEC,UAAU,CAAC;AAC9B,CAAC;AAAAF,EAAA,CAZKD,WAAW;EAAA,QACeD,eAAe;AAAA;AAa/C,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}