{"ast":null,"code":"import _slicedToArray from\"/Users/jamesmacquillan/Documents/chatbot-im-1o/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext}from'react';import useMessageCollection from'../hooks/useMessageCollection';/**\n * ChatContext is a context object that is used to share collection of messages\n * between components\n */import{jsx as _jsx}from\"react/jsx-runtime\";var ChatContext=/*#__PURE__*/createContext({});/**\n * ChatContextProvider is a functional component that serves as a provider for the ChatContext.\n * It provides the ChatContext to the components within its subtree.\n *\n * @param {Object} props - The properties passed to the component.\n * @returns {JSX.Element} A ChatContext.Provider element.\n */var ChatContextProvider=function ChatContextProvider(props){var _useMessageCollection=useMessageCollection([]),_useMessageCollection2=_slicedToArray(_useMessageCollection,3),messages=_useMessageCollection2[0],setMessages=_useMessageCollection2[1],clearMessages=_useMessageCollection2[2];return/*#__PURE__*/_jsx(ChatContext.Provider,{value:[messages,setMessages,clearMessages],children:props.children});};export{ChatContext,ChatContextProvider};","map":{"version":3,"names":["createContext","useMessageCollection","jsx","_jsx","ChatContext","ChatContextProvider","props","_useMessageCollection","_useMessageCollection2","_slicedToArray","messages","setMessages","clearMessages","Provider","value","children"],"sources":["/Users/jamesmacquillan/Documents/chatbot-im-1o/src/context/chatContext.js"],"sourcesContent":["import { createContext } from 'react';\nimport useMessageCollection from '../hooks/useMessageCollection';\n\n/**\n * ChatContext is a context object that is used to share collection of messages\n * between components\n */\nconst ChatContext = createContext({});\n\n/**\n * ChatContextProvider is a functional component that serves as a provider for the ChatContext.\n * It provides the ChatContext to the components within its subtree.\n *\n * @param {Object} props - The properties passed to the component.\n * @returns {JSX.Element} A ChatContext.Provider element.\n */\nconst ChatContextProvider = (props) => {\n  const [messages, setMessages, clearMessages] = useMessageCollection([]);\n\n  return (\n    <ChatContext.Provider value={[messages, setMessages, clearMessages]}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n\nexport { ChatContext, ChatContextProvider };\n"],"mappings":"oIAAA,OAASA,aAAa,KAAQ,OAAO,CACrC,MAAO,CAAAC,oBAAoB,KAAM,+BAA+B,CAEhE;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,GAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAAC,CAAC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAM,CAAAK,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,KAAK,CAAK,CACrC,IAAAC,qBAAA,CAA+CN,oBAAoB,CAAC,EAAE,CAAC,CAAAO,sBAAA,CAAAC,cAAA,CAAAF,qBAAA,IAAhEG,QAAQ,CAAAF,sBAAA,IAAEG,WAAW,CAAAH,sBAAA,IAAEI,aAAa,CAAAJ,sBAAA,IAE3C,mBACEL,IAAA,CAACC,WAAW,CAACS,QAAQ,EAACC,KAAK,CAAE,CAACJ,QAAQ,CAAEC,WAAW,CAAEC,aAAa,CAAE,CAAAG,QAAA,CACjET,KAAK,CAACS,QAAQ,CACK,CAAC,CAE3B,CAAC,CAED,OAASX,WAAW,CAAEC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}