{"ast":null,"code":"var _jsxFileName = \"/Users/jamesmacquillan/Downloads/chatbot-im-1o copy/src/components/DarkMode.js\",\n  _s = $RefreshSig$();\nimport useDarkMode from '../hooks/useDarkMode';\nimport { MdOutlineNightlight, MdOutlineWbSunny } from 'react-icons/md';\n\n/**\n * A toggle for switching between light and dark modes.\n *\n * @param {Object} props - The properties for the component.\n * @param {boolean} props.open - Whether the sidebar is open or not.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DarkMode = props => {\n  _s();\n  const [darkTheme, setDarkTheme] = useDarkMode();\n\n  /**\n   * Toggles the dark mode.\n   */\n  const handleMode = () => setDarkTheme(!darkTheme);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"nav__item\",\n      onClick: handleMode,\n      children: darkTheme ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav__icons\",\n          children: /*#__PURE__*/_jsxDEV(MdOutlineWbSunny, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${!props.open && \"hidden\"}`,\n          children: \"Light mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav__icons\",\n          children: /*#__PURE__*/_jsxDEV(MdOutlineNightlight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `${!props.open && \"hidden\"}`,\n          children: \"Night mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkMode, \"l7z4dzFWFHLzWHQCtzmcY2Oaaow=\", false, function () {\n  return [useDarkMode];\n});\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["useDarkMode","MdOutlineNightlight","MdOutlineWbSunny","jsxDEV","_jsxDEV","Fragment","_Fragment","DarkMode","props","_s","darkTheme","setDarkTheme","handleMode","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","_c","$RefreshReg$"],"sources":["/Users/jamesmacquillan/Downloads/chatbot-im-1o copy/src/components/DarkMode.js"],"sourcesContent":["import useDarkMode from '../hooks/useDarkMode';\nimport { MdOutlineNightlight, MdOutlineWbSunny } from 'react-icons/md';\n\n/**\n * A toggle for switching between light and dark modes.\n *\n * @param {Object} props - The properties for the component.\n * @param {boolean} props.open - Whether the sidebar is open or not.\n */\nconst DarkMode = (props) => {\n  const [darkTheme, setDarkTheme] = useDarkMode();\n\n  /**\n   * Toggles the dark mode.\n   */\n  const handleMode = () => setDarkTheme(!darkTheme);\n  return (\n    <div className=\"nav\">\n      <span className=\"nav__item\" onClick={handleMode}>\n        {darkTheme ? (\n          <>\n            <div className=\"nav__icons\">\n              <MdOutlineWbSunny />\n            </div>\n            <h1 className={`${!props.open && \"hidden\"}`}>Light mode</h1>\n          </>\n        ) : (\n          <>\n            <div className=\"nav__icons\">\n              <MdOutlineNightlight />\n            </div>\n            <h1 className={`${!props.open && \"hidden\"}`}>Night mode</h1>\n          </>\n        )}\n\n      </span>\n    </div>\n  )\n}\n\nexport default DarkMode;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,gBAAgB;;AAEtE;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,WAAW,CAAC,CAAC;;EAE/C;AACF;AACA;EACE,MAAMY,UAAU,GAAGA,CAAA,KAAMD,YAAY,CAAC,CAACD,SAAS,CAAC;EACjD,oBACEN,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBV,OAAA;MAAMS,SAAS,EAAC,WAAW;MAACE,OAAO,EAAEH,UAAW;MAAAE,QAAA,EAC7CJ,SAAS,gBACRN,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA;UAAKS,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBV,OAAA,CAACF,gBAAgB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNf,OAAA;UAAIS,SAAS,EAAE,GAAG,CAACL,KAAK,CAACY,IAAI,IAAI,QAAQ,EAAG;UAAAN,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAC5D,CAAC,gBAEHf,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA;UAAKS,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzBV,OAAA,CAACH,mBAAmB;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACNf,OAAA;UAAIS,SAAS,EAAE,GAAG,CAACL,KAAK,CAACY,IAAI,IAAI,QAAQ,EAAG;UAAAN,QAAA,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAC5D;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAV,EAAA,CA7BKF,QAAQ;EAAA,QACsBP,WAAW;AAAA;AAAAqB,EAAA,GADzCd,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}