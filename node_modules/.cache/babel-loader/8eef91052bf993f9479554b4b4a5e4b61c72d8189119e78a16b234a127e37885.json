{"ast":null,"code":"import _slicedToArray from\"/Users/jamesmacquillan/Documents/chatbot-im-1o/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';/**\n * A custom hook for managing state that is persisted in the local storage.\n *\n * @param {string} key - The key in the local storage where the state should be stored.\n * @param {any} initialValue - The initial value of the state.\n *\n * @returns {Array} An array containing the current value of the state\n * and a function to update it.\n */var useLocalStorage=function useLocalStorage(key,initialValue){var _useState=useState(function(){try{var item=window.localStorage.getItem(key);return item?JSON.parse(item):initialValue;}catch(error){console.log(error);return initialValue;}}),_useState2=_slicedToArray(_useState,2),storedValue=_useState2[0],setStoredValue=_useState2[1];var setValue=function setValue(value){try{var valueToStore=value instanceof Function?value(storedValue):value;setStoredValue(valueToStore);window.localStorage.setItem(key,JSON.stringify(valueToStore));}catch(error){console.log(error);}};var removeValue=function removeValue(value){window.localStorage.removeItem(value);};return[storedValue,setValue,removeValue];};export default useLocalStorage;","map":{"version":3,"names":["useState","useLocalStorage","key","initialValue","_useState","item","window","localStorage","getItem","JSON","parse","error","console","log","_useState2","_slicedToArray","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","stringify","removeValue","removeItem"],"sources":["/Users/jamesmacquillan/Documents/chatbot-im-1o/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A custom hook for managing state that is persisted in the local storage.\n *\n * @param {string} key - The key in the local storage where the state should be stored.\n * @param {any} initialValue - The initial value of the state.\n *\n * @returns {Array} An array containing the current value of the state\n * and a function to update it.\n */\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const removeValue = (value) => {\n    window.localStorage.removeItem(value);\n  };\n  return [storedValue, setValue, removeValue];\n};\n\nexport default useLocalStorage;\n"],"mappings":"oIAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,GAAG,CAAEC,YAAY,CAAK,CAC7C,IAAAC,SAAA,CAAsCJ,QAAQ,CAAC,UAAM,CACnD,GAAI,CACF,GAAM,CAAAK,IAAI,CAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACN,GAAG,CAAC,CAC7C,MAAO,CAAAG,IAAI,CAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAGF,YAAY,CAC/C,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAO,CAAAR,YAAY,CACrB,CACF,CAAC,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAX,SAAA,IARKY,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAUlC,GAAM,CAAAI,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAK,CAC1B,GAAI,CACF,GAAM,CAAAC,YAAY,CAChBD,KAAK,WAAY,CAAAE,QAAQ,CAAGF,KAAK,CAACH,WAAW,CAAC,CAAGG,KAAK,CAExDF,cAAc,CAACG,YAAY,CAAC,CAE5Bd,MAAM,CAACC,YAAY,CAACe,OAAO,CAACpB,GAAG,CAAEO,IAAI,CAACc,SAAS,CAACH,YAAY,CAAC,CAAC,CAChE,CAAE,MAAOT,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CACF,CAAC,CAED,GAAM,CAAAa,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIL,KAAK,CAAK,CAC7Bb,MAAM,CAACC,YAAY,CAACkB,UAAU,CAACN,KAAK,CAAC,CACvC,CAAC,CACD,MAAO,CAACH,WAAW,CAAEE,QAAQ,CAAEM,WAAW,CAAC,CAC7C,CAAC,CAED,cAAe,CAAAvB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}